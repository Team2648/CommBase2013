// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc2648.CommBase2013;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
import edu.wpi.first.wpilibj.Encoder.PIDSourceParameter;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
/**
 * This is where everything is declared, sensors, motors, driverstation access, everything. If it's
 * not being declared here first, it's probably being declared in the wrong place, and it's probably
 * somewhere that is using up a lot of system resources.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainLeft;
    public static SpeedController driveTrainRight;
    public static RobotDrive driveTrainRobotDrive21;
    public static SpeedController shooterShoot1;
    public static SpeedController shooterShoot2;
    public static SpeedController feederFeed;
    public static SpeedController vexVexM;
    public static Solenoid lEDControlunderShooter;
    public static Solenoid lEDControlunderTier1_1;
    public static Solenoid lEDControlunderTier1_2;
    public static Solenoid lEDControlunderTier2_1;
    public static Solenoid lEDControlunderTier2_2;
    public static SpeedController pickerUpperPolyBelt;
    public static SpeedController pickerUpperGreenWheel;
    public static SpeedController pickerUpperActuator;
    public static DigitalInput sensorsSwitch1;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static DriverStation ds;
    public static DriverStationLCD dsLCD;
    
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainLeft = new Talon(1, 1);
	LiveWindow.addActuator("DriveTrain", "Left", (Talon) driveTrainLeft);
        
        driveTrainRight = new Talon(1, 2);
	LiveWindow.addActuator("DriveTrain", "Right", (Talon) driveTrainRight);
        
        driveTrainRobotDrive21 = new RobotDrive(driveTrainLeft, driveTrainRight);
	
        driveTrainRobotDrive21.setSafetyEnabled(true);
        driveTrainRobotDrive21.setExpiration(0.1);
        driveTrainRobotDrive21.setSensitivity(0.5);
        driveTrainRobotDrive21.setMaxOutput(1.0);
        
        shooterShoot1 = new Victor(1, 3);
	LiveWindow.addActuator("Shooter", "Shoot1", (Victor) shooterShoot1);
        
        shooterShoot2 = new Victor(1, 4);
	LiveWindow.addActuator("Shooter", "Shoot2 ", (Victor) shooterShoot2);
        
        feederFeed = new Victor(1, 5);
	LiveWindow.addActuator("Feeder", "Feed", (Victor) feederFeed);
        
        vexVexM = new Victor(1, 6);
	LiveWindow.addActuator("Vex", "VexM", (Victor) vexVexM);
        
        lEDControlunderShooter = new Solenoid(1, 1);
	LiveWindow.addActuator("LEDControl", "underShooter", lEDControlunderShooter);
        
        lEDControlunderTier1_1 = new Solenoid(1, 2);
	LiveWindow.addActuator("LEDControl", "underTier1_1", lEDControlunderTier1_1);
        
        lEDControlunderTier1_2 = new Solenoid(1, 3);
	LiveWindow.addActuator("LEDControl", "underTier1_2", lEDControlunderTier1_2);
        
        lEDControlunderTier2_1 = new Solenoid(1, 4);
	LiveWindow.addActuator("LEDControl", "underTier2_1", lEDControlunderTier2_1);
        
        lEDControlunderTier2_2 = new Solenoid(1, 5);
	LiveWindow.addActuator("LEDControl", "underTier2_2", lEDControlunderTier2_2);
        
        pickerUpperPolyBelt = new Victor(1, 7);
	LiveWindow.addActuator("PickerUpper", "PolyBelt", (Victor) pickerUpperPolyBelt);
        
        pickerUpperGreenWheel = new Victor(1, 8);
	LiveWindow.addActuator("PickerUpper", "GreenWheel", (Victor) pickerUpperGreenWheel);
        
        pickerUpperActuator = new Jaguar(1, 9);
	LiveWindow.addActuator("PickerUpper", "Actuator", (Jaguar) pickerUpperActuator);
        
        sensorsSwitch1 = new DigitalInput(1, 1);
	LiveWindow.addSensor("Sensors", "Switch1", sensorsSwitch1);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
        ds = DriverStation.getInstance();
        dsLCD = DriverStationLCD.getInstance();
    }
}
